name: CI

on: push

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REGISTRY: ghcr.io
  NAME: mailsink

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - name: Set up build environment
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Maven Directory
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: m2

      - name: Cache Node Modules Directory
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node

      - name: Sonar Cache Directory
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: sonar

      - name: Check Project
        if: contains(github.event.ref, 'refs/tags/') != true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./mvnw verify -Dorganization.name=${{ github.repository_owner }}

      - name: Build jar
        if: contains(github.event.ref, 'refs/tags/') || contains(github.event.ref, 'develop')
        run: ./mvnw package -DskipTests -Dorganization.name=${{ github.repository_owner }}

      - name: Build container image
        if: contains(github.event.ref, 'refs/tags/') || contains(github.event.ref, 'develop')
        run: ./mvnw package jib:dockerBuild -DskipTests -Dorganization.name=${{ github.repository_owner }}

      - name: Login to Registry
        if: contains(github.event.ref, 'refs/tags/') || contains(github.event.ref, 'develop')
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Release Project
        if: contains(github.event.ref, 'refs/tags/')
        uses: ksokol/github-release-action@v2
        with:
          tag_name: ${{ github.event.ref }}
          release_name: ${{ github.event.ref }}
          asset_glob: target/$NAME.jar

      - name: Push latest image to registry
        if: contains(github.event.ref, 'develop')
        run: |
          docker tag ${{ github.repository_owner }}/$NAME $REGISTRY/${{ github.repository_owner }}/$NAME:latest
          docker push $REGISTRY/${{ github.repository_owner }}/$NAME:latest

      - name: Push tagged image to registry
        if: contains(github.event.ref, 'refs/tags/')
        run: |
          VERSION=$(./mvnw -B help:evaluate -Dexpression=project.version -q -DforceStdout | tail -n 1)
          docker tag ${{ github.repository_owner }}/$NAME $REGISTRY/${{ github.repository_owner }}/$NAME:${VERSION}
          docker push $REGISTRY/${{ github.repository_owner }}/$NAME:${VERSION}
